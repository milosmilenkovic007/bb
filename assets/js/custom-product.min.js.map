{"version":3,"file":"/assets/js/custom-product.min.js","mappings":"AAAAA,SAASC,iBAAiB,oBAAoB,WACpBD,SAASE,iBAAiB,2BAEhCC,SAAQ,SAASC,GAC7BA,EAAOH,iBAAiB,SAAS,WAC7B,IAAII,EAAYD,EAAOE,QAAQ,6BAG/B,GAAuB,WAFFD,EAAUE,cAAc,iCAAiCC,MAE7C,CAC7B,IAAIC,EAAYJ,EAAUK,QAAQD,UAC9BE,EAAUP,EAAOM,QAAQC,QACzBC,EAAOR,EAAOM,QAAQE,KAE1BC,QAAQC,IAAI,YAAaH,GACzBE,QAAQC,IAAI,QAASF,GAOjC,SAA4BH,EAAWE,EAASC,GAC5C,IAAIG,EAASC,OAAO,+GAEhBC,EAAgB,CAChBC,UAAW,CAAC,CAAEC,MAAOR,EAASS,SAAU,IACxCC,WAAY,8GACZC,UAAW,4BACXC,kBAAmBd,GAInBQ,EAAcL,KADL,iBAATA,EACqB,eAEA,UAGzBG,EAAOS,mBAAmBP,GAAeQ,MAAK,SAAUC,GACpD,GAAIA,EAAOC,MACPd,QAAQc,MAAMD,EAAOC,MAAMC,aACxB,CAEH,IAAIC,EAAYH,EAAOI,cAAcC,gBAAgBC,MACjDC,EAAWP,EAAOI,cAAcC,gBAAgBG,MAkBhE,SAAsBF,EAAOE,GACzB,OAAOC,MAAM,qBAAsB,CAC/BC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAER,MAAOA,EAAOE,KAAMA,MAE9CT,MAAK,SAAUgB,GACZ,IAAIA,EAASC,GAGT,MAAM,IAAIC,MAAM,4BAFhB9B,QAAQC,IAAI,+BAIpB,GACJ,EAzBI8B,CAF0BZ,EALGH,EAAWI,GAQnCR,MAAK,YA0Bd,SAAuBO,GAEnB,IAAIa,EAIR,SAAmCC,GAI/B,IAFA,IAAIC,EAAU,6EACVF,EAAoB,GACfG,EAAI,EAAGA,EAAIF,EAAQE,IAExBH,GAAqBE,EADHE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAQD,SAGzD,OAAOD,CACX,CAb4BO,CAA0B,IAClDC,OAAOC,SAASC,KAAO,0CAA4CvB,EAAQ,aAAea,CAC9F,CA5BYW,CAAcxB,EAClB,IACCyB,OAAM,SAAU9B,GACbd,QAAQc,MAAM,0BAA2BA,EAC7C,GAbA,CAIR,IAA8BK,CAH1B,GACJ,CA/BYR,CAAmBf,EAAWE,EAASC,EAC3C,CACJ,GACJ,GA2EJ","sources":["webpack:///./src/js/custom-product.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n    var checkoutButtons = document.querySelectorAll('.stripe-checkout-button');\n    \n    checkoutButtons.forEach(function(button) {\n        button.addEventListener('click', function () {\n            var container = button.closest('.paywall-button-container');\n            var selectedMethod = container.querySelector('select[name=\"payment-method\"]').value;\n            \n            if (selectedMethod === 'stripe') {\n                var productId = container.dataset.productId;\n                var priceId = button.dataset.priceId;\n                var mode = button.dataset.mode; \n\n                console.log('Price ID:', priceId);\n                console.log('Mode:', mode);\n\n                redirectToCheckout(productId, priceId, mode);\n            }\n        });\n    });\n\n    function redirectToCheckout(productId, priceId, mode) {\n        var stripe = Stripe('pk_test_51HaAwtK5jB6KWDXlgteNAsz7yn0xXiA1jluSEF96XKdiDJ7daT32leXRQjyRDhTKqx6R2tANyvbNmcF3u8rK63Y200SXAwp5e0');\n        \n        var sessionConfig = {\n            lineItems: [{ price: priceId, quantity: 1 }],\n            successUrl: 'https://martin.milos.live/omgangens-elva-marcus-danielson-och-max-fenger-tar-varsin-plats-i-omgangens-elva/',\n            cancelUrl: 'https://martin.milos.live',\n            clientReferenceId: productId\n        };\n\n        if (mode === 'subscription') {\n            sessionConfig.mode = 'subscription';\n        } else {\n            sessionConfig.mode = 'payment';\n        }\n\n        stripe.redirectToCheckout(sessionConfig).then(function (result) {\n            if (result.error) {\n                console.error(result.error.message);\n            } else {\n                // If the payment is successful, register and login the user\n                var userEmail = result.paymentMethod.billing_details.email;\n                var userName = result.paymentMethod.billing_details.name;\n                registerAndLoginUser(userEmail, userName);\n            }\n        });\n    }\n\n    function registerAndLoginUser(email, name) {\n        // Register the user\n        registerUser(email, name)\n            .then(function () {\n                // After successful registration, auto-login the user\n                autoLoginUser(email);\n            })\n            .catch(function (error) {\n                console.error('Error registering user:', error);\n            });\n    }\n\n    function registerUser(email, name) {\n        return fetch('/register_user.php', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email: email, name: name })\n        })\n        .then(function (response) {\n            if (response.ok) {\n                console.log('User registered successfully');\n            } else {\n                throw new Error('User registration failed');\n            }\n        });\n    }\n\n    function autoLoginUser(email) {\n        // Perform auto-login by redirecting to the WordPress login page with username and password parameters\n        var temporaryPassword = generateTemporaryPassword(12);\n        window.location.href = '/wp-login.php?auto_login=true&username=' + email + '&password=' + temporaryPassword;\n    }\n\n    function generateTemporaryPassword(length) {\n        // Generate a temporary password for auto-login\n        var charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*()_+\";\n        var temporaryPassword = \"\";\n        for (var i = 0; i < length; i++) {\n            var randomIndex = Math.floor(Math.random() * charset.length);\n            temporaryPassword += charset[randomIndex];\n        }\n        return temporaryPassword;\n    }\n});\n"],"names":["document","addEventListener","querySelectorAll","forEach","button","container","closest","querySelector","value","productId","dataset","priceId","mode","console","log","stripe","Stripe","sessionConfig","lineItems","price","quantity","successUrl","cancelUrl","clientReferenceId","redirectToCheckout","then","result","error","message","userEmail","paymentMethod","billing_details","email","userName","name","fetch","method","headers","body","JSON","stringify","response","ok","Error","registerUser","temporaryPassword","length","charset","i","Math","floor","random","generateTemporaryPassword","window","location","href","autoLoginUser","catch"],"sourceRoot":""}